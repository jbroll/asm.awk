# RV64I additions to RV32I

opcode addiw   rd rs1 aimm12  :           14..12=0 6..2=0x06 1..0=3     -> | { rd = signed(rs1 + aimm12, 32) }
opcode slliw   rd rs1 shamt6  : 31..25=_0 14..12=1 6..2=0x06 1..0=3     -> | { rd = signed(rs1 << unsigned(shamt6), 32) }
opcode srliw   rd rs1 shamt6  : 31..25=_0 14..12=5 6..2=0x06 1..0=3     -> | { rd = signed((rs1 >> unsigned(shamt6)) & msk2(31-unsigned(shamt6), 0), 32) }
opcode sraiw   rd rs1 shamt6  : 31..25=32 14..12=5 6..2=0x06 1..0=3     -> | { rd = signed( signed(rs1, 32) >> unsigned(shamt6), 32) }

opcode addw    rd rs1 rs2 : 31..25=0  14..12=0 6..2=0x0E 1..0=3         -> | { rd = signed(rs1 + rs2, 32) }
opcode subw    rd rs1 rs2 : 31..25=32 14..12=0 6..2=0x0E 1..0=3         -> | { rd = signed(rs1 - rs2, 32) }

opcode sllw    rd rs1 rs2 : 31..25=0  14..12=1 6..2=0x0E 1..0=3         -> | { rd = signed(rs1 << unsigned(rs2, 4), 32) }
opcode srlw    rd rs1 rs2 : 31..25=0  14..12=5 6..2=0x0E 1..0=3         -> | { rd = signed((signed(rs1, 32) >> unsigned(rs2, 4)) & msk2(31-unsigned(rs2, 4), 0), 32) }
opcode sraw    rd rs1 rs2 : 31..25=32 14..12=5 6..2=0x0E 1..0=3         -> | { rd = signed(signed( rs1, 32) >> unsigned(rs2, 4), 32) }

opcode ld      rd rs1 limm12        : 14..12=3 6..2=0x00 1..0=3         -> | { rd = ld_sdble(rs1 + limm12) } 
opcode lwu     rd rs1 limm12        : 14..12=6 6..2=0x00 1..0=3         -> | { rd = ld_uword(rs1 + limm12) }

opcode sd      rs1 rs2 simm12       : 14..12=3 6..2=0x08 1..0=3         -> | { st_dble(rs2, rs1 + simm12) } 
