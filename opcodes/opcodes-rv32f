
opcode fadd.s    fd fs1 fs2 rm    : 31..27=0x00 26..25=0 6..2=0x14 1..0=3               | { fd = fs1 + fs2 }
alias fadd.s fd fs1 fs2 -> fadd.s fd fs1 fs2 dyn
opcode fsub.s    fd fs1 fs2 rm    : 31..27=0x01 26..25=0 6..2=0x14 1..0=3               | { fd = fs1 - fs2 }
alias fsub.s fd fs1 fs2 -> fsub.s fd fs1 fs2 dyn
opcode fmul.s    fd fs1 fs2 rm    : 31..27=0x02 26..25=0 6..2=0x14 1..0=3               | { fd = fs1 * fs2 }
alias fmul.s fd fs1 fs2 -> fmul.s fd fs1 fs2 dyn
opcode fdiv.s    fd fs1 fs2 rm    : 31..27=0x03 26..25=0 6..2=0x14 1..0=3               | { fd = fs1 / fs2 }
alias fdiv.s fd fs1 fs2 -> fdiv.s fd fs1 fs2 dyn
opcode fsgnj.s   fd fs1 fs2       : 31..27=0x04 14..12=0 26..25=0 6..2=0x14 1..0=3      | { fd = fs1 >= 0 ? 1 : -1 }
opcode fsgnjn.s  fd fs1 fs2       : 31..27=0x04 14..12=1 26..25=0 6..2=0x14 1..0=3      | { fd = fs1 >= 0 ? 1 : -1 }
opcode fsgnjx.s  fd fs1 fs2       : 31..27=0x04 14..12=2 26..25=0 6..2=0x14 1..0=3      | { fd = fs1 >= 0 ? 1 : -1 }
opcode fmin.s    fd fs1 fs2       : 31..27=0x05 14..12=0 26..25=0 6..2=0x14 1..0=3      | { fd = min(fs1, fs2) }
opcode fmax.s    fd fs1 fs2       : 31..27=0x05 14..12=1 26..25=0 6..2=0x14 1..0=3      | { fd = max(fs1, fs2) }
opcode fsqrt.s   fd fs1 rm  : 24..20=0 31..27=0x0B 26..25=0 6..2=0x14 1..0=3            | { fd = sqrt(fs1) }
alias fsqrt.s fd fs1 -> fsqrt.s fd fs1 dyn

opcode fle.s    rd fs1 fs2          : 31..27=0x14 14..12=0 26..25=0 6..2=0x14 1..0=3    | { rd = fs1 <= fs2 ? 1 : 0 }
opcode flt.s    rd fs1 fs2          : 31..27=0x14 14..12=1 26..25=0 6..2=0x14 1..0=3    | { rd = fs1 >  fs2 ? 1 : 0 }
opcode feq.s    rd fs1 fs2          : 31..27=0x14 14..12=2 26..25=0 6..2=0x14 1..0=3    | { rd = fs1 == fs2 ? 1 : 0 }

opcode fcvt.w.s  rd fs1 rm  : 24..20=0 31..27=0x18 26..25=0 6..2=0x14 1..0=3            | { rd = fs1 }
alias  fcvt.w.s  rd fs1 -> fcvt.w.s rd fs1 dyn
opcode fcvt.wu.s rd fs1 rm  : 24..20=1 31..27=0x18 26..25=0 6..2=0x14 1..0=3            | { rd = abs(fs1) }
alias  fcvt.wu.s rd fs1 -> fcvt.wu.s rd fs1 dyn
opcode fclass.s  rd fs1     : 24..20=0 31..27=0x1C 14..12=1 26..25=0 6..2=0x14 1..0=3   | { rd = fpclass(fs1) }

opcode fcvt.s.w  fd rs1 rm : 24..20=0 31..27=0x1A 26..25=0 6..2=0x14 1..0=3             | { fd = rs1 }
alias  fcvt.s.w  fd rs1 -> fcvt.s.w fd rs1 dyn
opcode fcvt.s.wu fd rs1 rm : 24..20=1 31..27=0x1A 26..25=0 6..2=0x14 1..0=3             | { fd = unsigned(rs1) }
alias  fcvt.s.wu fd rs1 -> fcvt.s.wu fd rs1 dyn

if { ![iset finx] } {
    opcode fmv.x.w   rd fs1 : 24..20=0 31..27=0x1C 14..12=0 26..25=0 6..2=0x14 1..0=3   | { rd = fbits(fs1) }
    opcode fmv.w.x   fd rs1 : 24..20=0 31..27=0x1E 14..12=0 26..25=0 6..2=0x14 1..0=3   | { fd = ibits(rs1) }
}

opcode flw       fd  rs1  limm12 : 14..12=2 6..2=0x01 1..0=3                            | { fd = ld_fword(rs1+limm12) }
opcode fsw       fs2 rs1  simm12 : 14..12=2 6..2=0x09 1..0=3                            | { st_fword(rs1+simm12, fsw) }

opcode fmadd.s   fd fs1 fs2 fs3 rm : 26..25=0 6..2=0x10 1..0=3                          | { fd = fs1 + fs2*fs3 }
alias  fmadd.s   fd fs1 fs2 fs3 -> fmadd.s fd fs1 fs2 fs3 dyn 
opcode fmsub.s   fd fs1 fs2 fs3 rm : 26..25=0 6..2=0x11 1..0=3                          | { fd = fs1 - fs2*fs3 }
alias  fmsub.s   fd fs1 fs2 fs3 -> fmsub.s fd fs1 fs2 fs3 dyn
opcode fnmsub.s  fd fs1 fs2 fs3 rm : 26..25=0 6..2=0x12 1..0=3                          | { fd = fs1 + fs2*fs3 }
alias  fnmsub.s  fd fs1 fs2 fs3 -> fnmsub.s fd fs1 fs2 fs3 dyn
opcode fnmadd.s  fd fs1 fs2 fs3 rm : 26..25=0 6..2=0x13 1..0=3                          | { fd = fs1 - fs2*fs3 }
alias  fnmadd.s  fd fs1 fs2 fs3 -> fnmadd.s fd fs1 fs2 fs3 dyn
